// 2022-09-05 17:46:14
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = spr_addBlock;
uses_physics = false;

#event create Setup
image_alpha = 0.5;
image_speed = 0;
image_index = 0;
eventid_starttime = -999;
eventid_endtime = -9999;
last_block = noone;

bhours_start = 0;
bhours_end = 0;
bminutes_start = 0;
bminutes_end = 0;

weekday = "undefined"

#event mouse_left_press Create instance of block

eventid_starttime = get_string_async("Starting time (HH:MM). Not using a colon (ex.: 90) will result in 1 hour and 30 minutes.", "07:30");

#event mouse_enter Change sprite

image_index = 1;

#event mouse_leave Change sprite

image_index = 0;

#event async_dialog get result
var i_d = ds_map_find_value(async_load, "id");
if (i_d == eventid_starttime)
{
    if ds_map_find_value(async_load, "status") // okay
    {
        if ds_map_find_value(async_load, "result") != "" // not empty
        {
            var btimestr = ds_map_find_value(async_load, "result"); // get the val
            var delim = string_pos(":", btimestr);
            var bhours = 0;
            var bminutes = 0;
            
            if(delim == 0) // : missing, maybe only minutes???
            {
                bhours = int64(btimestr) div 60;
                bminutes = int64(btimestr) mod 60;
                
                show_debug_message("hours: " + string(bhours))
                show_debug_message("minutes: " +string(bminutes))
                //exit; // exit event
            }
            else
            {

                
                bhours = int64(string_copy(btimestr,1,delim-1)); // From 0-:
                bminutes = int64(string_copy(btimestr, delim + 1, string_length(btimestr))) // :-end
                
                bhours += bminutes div 60;
                bminutes = bminutes mod 60;
                
                show_debug_message("hours: " + string(bhours))
                show_debug_message("minutes: " +string(bminutes))

            }
            
            bminutes_start = bminutes;
            bhours_start = bhours;
            
            eventid_endtime = get_string_async("End time (HH:MM). Not using a colon (ex.: 90) will result in 1 hour and 30 minutes.", "9:30") 
            
            /*var totaltimemin = (bhours*60 + bminutes);
            var chunktime = 30; // min of one chunk
            var chunkspawnsize = 64;
            var chunks = totaltimemin div chunktime; // one chunk = 30 min
            var rest = totaltimemin mod chunktime; // the rest
            var yspawn = chunks * chunkspawnsize + (rest / chunktime)*chunkspawnsize;
            
            last_block = instance_create(x - BLOCK_WIDTH/2, yspawn, obj_block);
            last_block.starttime = date_create_datetime(2022,0,0,bhours, bminutes, 0); // create date
            last_block.yoffset = yspawn;*/
            
        }
        else
        {
            // abort
            show_debug_message("Add aborted: No string supplied");
        }
    }
    else
    {
        show_debug_message("Add aborted: User cancelled")
    }
}

// Endtime
if (i_d == eventid_endtime)
{
    if ds_map_find_value(async_load, "status") // okay
    {
        if ds_map_find_value(async_load, "result") != "" // not empty
        {
            var btimestr = ds_map_find_value(async_load, "result"); // get the val
            var delim = string_pos(":", btimestr);
            var bhours = 0;
            var bminutes = 0;
            
            if(delim == 0) // : missing, maybe only minutes???
            {
                bhours = int64(btimestr) div 60;
                bminutes = int64(btimestr) mod 60;
                
                show_debug_message("hours: " + string(bhours))
                show_debug_message("minutes: " +string(bminutes))
                //exit; // exit event
            }
            else
            {
                bhours = int64(string_copy(btimestr,1,delim-1)); // From 0-:
                bminutes = int64(string_copy(btimestr, delim + 1, string_length(btimestr))) // :-end
                
                bhours += bminutes div 60;
                bminutes = bminutes mod 60;
                
                show_debug_message("hours: " + string(bhours))
                show_debug_message("minutes: " +string(bminutes))

            }
            
            bminutes_end = bminutes;
            bhours_end = bhours;
            // Create the block with given times
            scr_createBlock(bhours_start, bminutes_start, bhours_end, bminutes_end);
            
        }
        else
        {
            // abort
            show_debug_message("Add aborted: No string supplied");
        }
    }
    else
    {
        show_debug_message("Add aborted: User cancelled")
    }
}




#event draw Draw weekday

draw_self();

draw_set_font(fnt_timetable);
draw_set_halign(fa_center);
draw_text(x,y-sprite_height, weekday);
